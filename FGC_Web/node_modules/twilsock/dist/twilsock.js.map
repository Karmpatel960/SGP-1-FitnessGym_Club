{"version":3,"file":"twilsock.js","sources":["../src/twilsock.ts"],"sourcesContent":["import { EventEmitter } from \"events\";\nimport * as StateMachine from \"javascript-state-machine\";\nimport { Configuration } from \"./configuration\";\nimport { log } from \"./logger\";\nimport { ConnectionState } from \"./client\";\nimport type { Header } from \"./protocol/protocol\";\nimport * as Messages from \"./protocol/messages\";\nimport { Parser } from \"./parser\";\nimport { PacketInterface } from \"./packetinterface\";\nimport { WebSocketChannel } from \"./websocketchannel\";\nimport { TwilsockReplyError } from \"./error/twilsockreplyerror\";\nimport { BackoffRetrier } from \"./backoffretrier\";\nimport type { ReplyType } from \"./protocol/messages/reply\";\n\nconst DISCONNECTING_TIMEOUT = 3000;\n\n// Wraps asynchronous rescheduling\n// Just makes it simpler to find these hacks over the code\n// Currently there's exactly one instance of this in closeSocket()\nfunction trampoline(f: () => void) {\n  setTimeout(f, 0);\n}\n\nclass Response {}\n\n/**\n * Twilsock channel level protocol implementation\n */\nclass TwilsockChannel extends EventEmitter {\n  private readonly config: Configuration;\n\n  private readonly fsm: StateMachine;\n\n  private disconnectingTimer: ReturnType<typeof setTimeout> | null = null;\n\n  private disconnectedPromiseResolve: (() => void) | null = null;\n  private retrier: BackoffRetrier;\n\n  private websocket: WebSocketChannel;\n  private transport: PacketInterface;\n\n  private readonly terminalStates: Array<string> = [\"disconnected\", \"rejected\"];\n  private lastEmittedState;\n  private readonly tokenExpiredSasCode = 20104;\n\n  private terminationReason = \"Connection is not initialized\";\n\n  constructor(\n    websocket: WebSocketChannel,\n    transport: PacketInterface,\n    config: Configuration\n  ) {\n    super();\n\n    this.websocket = websocket;\n    this.websocket.on(\"connected\", () => this.fsm.socketConnected());\n    this.websocket.on(\"disconnected\", () => this.fsm.socketClosed());\n    this.websocket.on(\"message\", (message) => this.onIncomingMessage(message));\n    this.websocket.on(\"socketError\", (e) =>\n      this.emit(\"connectionError\", {\n        terminal: false,\n        message: `Socket error: ${e.message}`,\n        httpStatusCode: null,\n        errorCode: null,\n      })\n    );\n\n    this.transport = transport;\n    this.config = config;\n\n    this.retrier = new BackoffRetrier(config.retryPolicy);\n    this.retrier.on(\"attempt\", () => this.retry());\n    this.retrier.on(\"failed\", (err) => {\n      log.warn(`Retrying failed: ${err.message}`);\n      this.disconnect();\n    });\n\n    if (\n      typeof window !== \"undefined\" &&\n      typeof window.addEventListener !== \"undefined\"\n    ) {\n      window.addEventListener(\"online\", () => {\n        log.debug(\"Browser reported connectivity state: online\");\n        this.resetBackoff();\n        this.fsm.systemOnline();\n      });\n\n      window.addEventListener(\"offline\", () => {\n        log.debug(\"Browser reported connectivity state: offline\");\n        this.websocket.close();\n        this.fsm.socketClosed();\n      });\n    }\n\n    // We have to use a factory function in here because using the default\n    // StateMachine constructor would cause an error for the consumers of the\n    // rollup bundles. This is a quirk unique to the javascript-state-machine\n    // library.\n\n    const TwilsockStateMachine: StateMachine = StateMachine.factory({\n      init: \"disconnected\",\n      transitions: [\n        {\n          name: \"userConnect\",\n          from: [\"disconnected\", \"rejected\"],\n          to: \"connecting\",\n        },\n        { name: \"userConnect\", from: [\"connecting\", \"connected\"] }, // ignore event\n        {\n          name: \"userDisconnect\",\n          from: [\n            \"connecting\",\n            \"initialising\",\n            \"connected\",\n            \"updating\",\n            \"retrying\",\n            \"rejected\",\n            \"waitSocketClosed\",\n            \"waitOffloadSocketClosed\",\n          ],\n          to: \"disconnecting\",\n        },\n        { name: \"userRetry\", from: [\"retrying\"], to: \"connecting\" },\n        { name: \"socketConnected\", from: [\"connecting\"], to: \"initialising\" },\n        {\n          name: \"socketClosed\",\n          from: [\n            \"connecting\",\n            \"initialising\",\n            \"connected\",\n            \"updating\",\n            \"error\",\n            \"waitOffloadSocketClosed\",\n          ],\n          to: \"retrying\",\n        },\n        { name: \"socketClosed\", from: [\"disconnecting\"], to: \"disconnected\" },\n        {\n          name: \"socketClosed\",\n          from: [\"waitSocketClosed\"],\n          to: \"disconnected\",\n        },\n        { name: \"socketClosed\", from: [\"rejected\"], to: \"rejected\" },\n        { name: \"initSuccess\", from: [\"initialising\"], to: \"connected\" },\n        { name: \"initError\", from: [\"initialising\"], to: \"error\" },\n        {\n          name: \"tokenRejected\",\n          from: [\"initialising\", \"updating\"],\n          to: \"rejected\",\n        },\n        {\n          name: \"protocolError\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"error\",\n        },\n        {\n          name: \"receiveClose\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"waitSocketClosed\",\n        },\n        {\n          name: \"receiveOffload\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"waitOffloadSocketClosed\",\n        },\n        {\n          name: \"unsupportedProtocol\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"unsupported\",\n        },\n        {\n          name: \"receiveFatalClose\",\n          from: [\"initialising\", \"connected\", \"updating\"],\n          to: \"unsupported\",\n        },\n        {\n          name: \"userUpdateToken\",\n          from: [\"disconnected\", \"rejected\", \"connecting\", \"retrying\"],\n          to: \"connecting\",\n        },\n        { name: \"userUpdateToken\", from: [\"connected\"], to: \"updating\" },\n        { name: \"updateSuccess\", from: [\"updating\"], to: \"connected\" },\n        { name: \"updateError\", from: [\"updating\"], to: \"error\" },\n        { name: \"userSend\", from: [\"connected\"], to: \"connected\" },\n        { name: \"systemOnline\", from: [\"retrying\"], to: \"connecting\" },\n      ],\n      methods: {\n        onConnecting: () => {\n          this.setupSocket();\n          this.emit(\"connecting\");\n        },\n        onEnterInitialising: () => {\n          this.sendInit();\n        },\n        onLeaveInitialising: () => {\n          this.cancelInit();\n        },\n        onEnterUpdating: () => {\n          this.sendUpdate();\n        },\n        onLeaveUpdating: () => {\n          this.cancelUpdate();\n        },\n        onEnterRetrying: () => {\n          this.initRetry();\n          this.emit(\"connecting\");\n        },\n        onEnterConnected: () => {\n          this.resetBackoff();\n          this.onConnected();\n        },\n        onUserUpdateToken: () => {\n          this.resetBackoff();\n        },\n        onTokenRejected: () => {\n          this.resetBackoff();\n          this.closeSocket(true);\n          this.finalizeSocket();\n        },\n        onUserDisconnect: () => {\n          this.closeSocket(true);\n        },\n        onEnterDisconnecting: () => {\n          this.startDisconnectTimer();\n        },\n        onLeaveDisconnecting: () => {\n          this.cancelDisconnectTimer();\n        },\n        onEnterWaitSocketClosed: () => {\n          this.startDisconnectTimer();\n        },\n        onLeaveWaitSocketClosed: () => {\n          this.cancelDisconnectTimer();\n        },\n        onEnterWaitOffloadSocketClosed: () => {\n          this.startDisconnectTimer();\n        },\n        onLeaveWaitOffloadSocketClosed: () => {\n          this.cancelDisconnectTimer();\n        },\n        onDisconnected: () => {\n          this.resetBackoff();\n          this.finalizeSocket();\n        },\n        onReceiveClose: () => {\n          this.onCloseReceived();\n        },\n        onReceiveOffload: (event, args) => {\n          log.debug(\"onreceiveoffload: \", args);\n          this.modifyBackoff(args.body);\n          this.onCloseReceived();\n        },\n        onUnsupported: () => {\n          this.closeSocket(true);\n          this.finalizeSocket();\n        },\n        onError: (lifecycle, graceful: boolean) => {\n          this.closeSocket(graceful);\n          this.finalizeSocket();\n        },\n        onEnterState: (event) => {\n          if (event.from !== \"none\") {\n            this.changeState(event);\n          }\n        },\n        onInvalidTransition: (transition, from, to) => {\n          log.warn(\"FSM: unexpected transition\", from, to);\n        },\n      },\n    });\n    this.fsm = new TwilsockStateMachine();\n  }\n\n  private changeState(event: {\n    transition: unknown;\n    from: string;\n    to: string;\n  }): void {\n    log.debug(`FSM: ${event.transition}: ${event.from} --> ${event.to}`);\n\n    if (this.lastEmittedState !== this.state) {\n      this.lastEmittedState = this.state;\n      this.emit(\"stateChanged\", this.state);\n    }\n  }\n\n  private resetBackoff(): void {\n    log.trace(\"resetBackoff\");\n    this.retrier.stop();\n  }\n\n  private modifyBackoff(body): void {\n    log.trace(\"modifyBackoff\", body);\n\n    const backoffPolicy = body ? body.backoff_policy : null;\n\n    if (backoffPolicy && typeof backoffPolicy.reconnect_min_ms === \"number\") {\n      this.retrier.modifyBackoff(backoffPolicy.reconnect_min_ms);\n    }\n  }\n\n  private startDisconnectTimer(): void {\n    log.trace(\"startDisconnectTimer\");\n\n    if (this.disconnectingTimer) {\n      clearTimeout(this.disconnectingTimer);\n      this.disconnectingTimer = null;\n    }\n\n    this.disconnectingTimer = setTimeout(() => {\n      log.debug(\"disconnecting is timed out\");\n      this.closeSocket(true);\n    }, DISCONNECTING_TIMEOUT);\n  }\n\n  private cancelDisconnectTimer(): void {\n    log.trace(\"cancelDisconnectTimer\");\n\n    if (this.disconnectingTimer) {\n      clearTimeout(this.disconnectingTimer);\n      this.disconnectingTimer = null;\n    }\n  }\n\n  public get isConnected(): boolean {\n    return this.state === \"connected\" && this.websocket.isConnected;\n  }\n\n  public get state(): ConnectionState {\n    switch (this.fsm.state) {\n      case \"connecting\":\n      case \"initialising\":\n      case \"retrying\":\n      case \"error\":\n        return \"connecting\";\n      case \"updating\":\n      case \"connected\":\n        return \"connected\";\n      case \"rejected\":\n        return \"denied\";\n      case \"disconnecting\":\n      case \"waitSocketClosed\":\n      case \"waitOffloadSocketClosed\":\n        return \"disconnecting\";\n      case \"disconnected\":\n      default:\n        return \"disconnected\";\n    }\n  }\n\n  private initRetry() {\n    log.debug(\"initRetry\");\n    if (this.retrier.inProgress) {\n      this.retrier.attemptFailed();\n    } else {\n      this.retrier.start();\n    }\n  }\n\n  private retry(): void {\n    if (this.fsm.state != \"connecting\") {\n      log.trace(\"retry\");\n      this.websocket.close();\n      this.fsm.userRetry();\n    } else {\n      log.trace(\"can\\t retry as already connecting\");\n    }\n  }\n\n  private onConnected(): void {\n    this.emit(\"connected\");\n  }\n\n  private finalizeSocket(): void {\n    log.trace(\"finalizeSocket\");\n\n    this.websocket.close();\n    this.emit(\"disconnected\");\n\n    if (this.disconnectedPromiseResolve) {\n      this.disconnectedPromiseResolve();\n      this.disconnectedPromiseResolve = null;\n    }\n  }\n\n  private setupSocket(): void {\n    log.trace(\"setupSocket:\", this.config.token);\n    this.emit(\"beforeConnect\"); // This is used by client to record startup telemetry event\n    this.websocket.connect();\n  }\n\n  private onIncomingMessage(message: ArrayBuffer): void {\n    const parsedMessage = Parser.parse(message);\n    if (!parsedMessage) {\n      return;\n    }\n    const { method, header, payload } = parsedMessage;\n\n    if (method !== \"reply\") {\n      this.confirmReceiving(header);\n    }\n\n    if (method === \"notification\") {\n      this.emit(\"message\", header.message_type, payload);\n    } else if (header.method === \"reply\") {\n      this.transport.processReply({\n        id: header.id,\n        status: header.status,\n        header: header,\n        body: payload,\n      });\n    } else if (header.method === \"client_update\") {\n      if (header.client_update_type === \"token_about_to_expire\") {\n        this.emit(\"tokenAboutToExpire\");\n      }\n    } else if (header.method === \"close\") {\n      if (header.status.code === 308) {\n        log.debug(\"Connection has been offloaded\");\n        this.fsm.receiveOffload({\n          status: header.status.status,\n          body: payload,\n        });\n      } else if (header.status.code === 406) {\n        // Not acceptable message\n        const message = `Server closed connection because can't parse protocol: ${JSON.stringify(\n          header.status\n        )}`;\n        this.emitReplyConnectionError(message, header, true);\n        log.error(message);\n        this.fsm.receiveFatalClose();\n      } else if (header.status.code === 417) {\n        // Protocol error\n        log.error(\n          `Server closed connection because can't parse client reply: ${JSON.stringify(\n            header.status\n          )}`\n        );\n        this.fsm.receiveFatalClose(header.status.status);\n      } else if (header.status.code === 410) {\n        // Expired token\n        log.warn(`Server closed connection: ${JSON.stringify(header.status)}`);\n        this.fsm.receiveClose(header.status.status);\n        this.emit(\"tokenExpired\");\n      } else if (header.status.code === 401) {\n        // Authentication fail\n        log.error(`Server closed connection: ${JSON.stringify(header.status)}`);\n        this.fsm.receiveClose(header.status.status);\n      } else {\n        log.warn(\"unexpected message: \", header.status);\n        // Try to reconnect\n        this.fsm.receiveOffload({ status: header.status.status, body: null });\n      }\n    }\n  }\n\n  private async sendInit(): Promise<void> {\n    log.trace(\"sendInit\");\n\n    try {\n      this.emit(\"beforeSendInit\"); // This is used by client to record startup telemetry event\n      const reply = await this.transport.sendInit();\n      this.config.updateContinuationToken(reply.continuationToken);\n      this.config.confirmedCapabilities = reply.confirmedCapabilities;\n      this.fsm.initSuccess(reply);\n      this.emit(\"initialized\", reply);\n      this.emit(\"tokenUpdated\");\n    } catch (ex) {\n      if (ex instanceof TwilsockReplyError) {\n        let isTerminalError = false;\n\n        log.warn(`Init rejected by server: ${JSON.stringify(ex.reply.status)}`);\n        this.emit(\"sendInitFailed\"); // This is used by client to record startup telemetry event\n        // @todo emit telemetry from inside \"if\" below for more granularity...\n\n        if (ex.reply.status.code === 401 || ex.reply.status.code === 403) {\n          isTerminalError = true;\n          this.fsm.tokenRejected(ex.reply.status);\n          if (ex.reply.status.errorCode === this.tokenExpiredSasCode) {\n            this.emit(\"tokenExpired\");\n          }\n        } else if (ex.reply.status.code === 429) {\n          this.modifyBackoff(ex.reply.body);\n          this.fsm.initError(true);\n        } else if (ex.reply.status.code === 500) {\n          this.fsm.initError(false);\n        } else {\n          this.fsm.initError(true);\n        }\n\n        this.emitReplyConnectionError(ex.message, ex.reply, isTerminalError);\n      } else {\n        this.terminationReason = ex.message;\n        this.emit(\"connectionError\", {\n          terminal: true,\n          message: `Unknown error during connection initialisation: ${\n            ex.message\n          }\\n${JSON.stringify(ex, null, 2)}`,\n          httpStatusCode: null,\n          errorCode: null,\n        });\n        this.fsm.initError(true);\n      }\n      this.emit(\"tokenUpdated\", ex);\n    }\n  }\n\n  private async sendUpdate(): Promise<void> {\n    log.trace(\"sendUpdate\");\n\n    const message = new Messages.Update(this.config.token);\n\n    try {\n      const reply = await this.transport.sendWithReply(message);\n      this.fsm.updateSuccess(reply.body);\n      this.emit(\"tokenUpdated\");\n    } catch (ex) {\n      if (ex instanceof TwilsockReplyError) {\n        let isTerminalError = false;\n        log.warn(\n          `Token update rejected by server: ${JSON.stringify(ex.reply.status)}`\n        );\n        if (ex.reply.status.code === 401 || ex.reply.status.code === 403) {\n          isTerminalError = true;\n          this.fsm.tokenRejected(ex.reply.status);\n          if (ex.reply.status.errorCode === this.tokenExpiredSasCode) {\n            this.emit(\"tokenExpired\");\n          }\n        } else if (ex.reply.status.code === 429) {\n          this.modifyBackoff(ex.reply.body);\n          this.fsm.updateError(ex.reply.status);\n        } else {\n          this.fsm.updateError(ex.reply.status);\n        }\n        this.emitReplyConnectionError(ex.message, ex.reply, isTerminalError);\n      } else {\n        this.emit(\"error\", false, ex.message, null, null);\n        this.fsm.updateError(ex);\n      }\n      this.emit(\"tokenUpdated\", ex);\n    }\n  }\n\n  private emitReplyConnectionError(\n    message: string,\n    header: Header | ReplyType,\n    terminal: boolean\n  ) {\n    const description =\n      header.status && header.status.description\n        ? header.status.description\n        : message;\n\n    const httpStatusCode = header.status.code;\n\n    const errorCode =\n      header.status && header.status.errorCode ? header.status.errorCode : null;\n\n    if (terminal) {\n      this.terminationReason = description;\n    }\n\n    this.emit(\"connectionError\", {\n      terminal: terminal,\n      message: `Connection error: ${description}`,\n      httpStatusCode: httpStatusCode,\n      errorCode: errorCode,\n    });\n  }\n\n  private cancelInit(): void {\n    log.trace(\"cancelInit\");\n    // TODO: implement\n  }\n\n  private cancelUpdate(): void {\n    log.trace(\"cancelUpdate\");\n    // TODO: implement\n  }\n\n  /**\n   * Should be called for each message to confirm it received\n   */\n\n  private confirmReceiving(messageHeader: Header) {\n    log.trace(\"confirmReceiving\");\n\n    try {\n      //@todo send telemetry events AnyEvents\n      this.transport.send(new Messages.Reply(messageHeader.id));\n    } catch (e) {\n      log.debug(\"failed to confirm packet receiving\", e);\n    }\n  }\n\n  /**\n   * Shutdown connection\n   */\n  private closeSocket(graceful: boolean): void {\n    log.trace(`closeSocket (graceful: ${graceful})`);\n\n    if (graceful && this.transport.isConnected) {\n      this.transport.sendClose();\n    }\n    this.websocket.close();\n\n    trampoline(() => this.fsm.socketClosed());\n  }\n\n  /**\n   * Initiate the twilsock connection\n   * If already connected, it does nothing\n   */\n  connect(): void {\n    log.trace(\"connect\");\n    this.fsm.userConnect();\n  }\n\n  /**\n   * Close twilsock connection\n   * If already disconnected, it does nothing\n   */\n  disconnect(): Promise<void> {\n    log.trace(\"disconnect\");\n\n    if (this.fsm.is(\"disconnected\")) {\n      return Promise.resolve();\n    }\n\n    return new Promise((resolve) => {\n      this.disconnectedPromiseResolve = resolve;\n      this.fsm.userDisconnect();\n    });\n  }\n\n  /**\n   * Update fpa token for twilsock connection\n   */\n  public updateToken(token: string): Promise<void> {\n    log.trace(\"updateToken:\", token);\n\n    return new Promise((resolve, reject) => {\n      this.once(\"tokenUpdated\", (e) => {\n        if (e) {\n          reject(e);\n        } else {\n          resolve();\n        }\n      });\n\n      this.fsm.userUpdateToken();\n    });\n  }\n\n  public get isTerminalState(): boolean {\n    return this.terminalStates.indexOf(this.fsm.state) !== -1;\n  }\n\n  public get getTerminationReason(): string {\n    return this.terminationReason;\n  }\n\n  private onCloseReceived(): void {\n    this.websocket.close();\n  }\n}\n\nexport { Response, TwilsockChannel };\n"],"names":["EventEmitter","BackoffRetrier","log","StateMachine","Parser","TwilsockReplyError","Messages.Update","Messages.Reply"],"mappings":"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"}