{"version":3,"file":"transport.js","sources":["../../src/services/transport.ts"],"sourcesContent":["import { TransportError } from \"./transporterror\";\n\n// eslint-disable-next-line\nconst XHR = global[\"XMLHttpRequest\"] || require(\"xmlhttprequest\").XMLHttpRequest;\n\ntype Headers = { [id: string]: string };\n\nfunction parseResponseHeaders(headerString: string): Headers {\n  if (!headerString) {\n    return {};\n  }\n\n  return headerString\n    .split(\"\\u000d\\u000a\")\n    .map((el) => el.split(\"\\u003a\\u0020\"))\n    .filter((el) => el.length === 2 && el[1].length > 0)\n    .reduce((prev, curr) => {\n      prev[curr[0]] = curr[1];\n      return prev;\n    }, {});\n}\n\nfunction extractBody(xhr) {\n  const contentType = xhr.getResponseHeader(\"Content-Type\");\n  if (\n    !contentType ||\n    contentType.indexOf(\"application/json\") !== 0 ||\n    xhr.responseText.length === 0\n  ) {\n    return xhr.responseText;\n  }\n\n  try {\n    return JSON.parse(xhr.responseText);\n  } catch (e) {\n    return xhr.responseText;\n  }\n}\n\nfunction adaptHttpResponse(response: Response) {\n  try {\n    response.body = JSON.parse(response.body);\n  } catch (e) {} // eslint-disable-line no-empty\n  return response;\n}\n\ninterface Response {\n  status: any;\n  headers: Headers;\n  body: any;\n}\n\n/**\n * Provides generic network interface\n */\nclass Transport {\n  private static async request(\n    method: string,\n    url: string,\n    headers: Headers,\n    body?\n  ): Promise<Response> {\n    return new Promise<Response>((resolve, reject) => {\n      const xhr = new XHR();\n      xhr.open(method, url, true);\n\n      xhr.onreadystatechange = function onreadystatechange() {\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        const headers = parseResponseHeaders(xhr.getAllResponseHeaders());\n        const body = extractBody(xhr);\n\n        if (200 <= xhr.status && xhr.status < 300) {\n          resolve({ status: xhr.status, headers, body });\n        } else {\n          const status = xhr.statusText ?? \"NONE\";\n          let bodyRepresentation;\n          if (typeof body === \"string\") {\n            bodyRepresentation =\n              body && body.split(\"\\n\", 2).length === 1 ? body : \"\";\n          } else {\n            bodyRepresentation = JSON.stringify(body);\n          }\n          const message = `${xhr.status}: [${status}] ${bodyRepresentation}`;\n          reject(\n            new TransportError(message, xhr.status, body, status, headers)\n          );\n        }\n      };\n\n      for (const headerName in headers) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n        if (\n          headerName === \"Content-Type\" &&\n          headers[headerName] === \"application/json\"\n        ) {\n          body = JSON.stringify(body);\n        }\n      }\n\n      xhr.send(body);\n    });\n  }\n\n  /**\n   * Make a GET request by given URL\n   */\n  public async get(url: string, headers: Headers): Promise<Response> {\n    return Transport.request(\"GET\", url, headers);\n  }\n\n  /**\n   * Make a POST request by given URL\n   */\n  public async post(url: string, headers: Headers, body?): Promise<Response> {\n    return Transport.request(\"POST\", url, headers, body);\n  }\n}\n\nexport { Headers, Response, Transport };\n"],"names":["TransportError"],"mappings":"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"}