{"version":3,"file":"initregistration.js","sources":["../../src/protocol/initregistration.ts"],"sourcesContent":["class InitRegistration {\n  public product: string;\n  public type: string;\n  public notification_protocol_version: number;\n  public message_types: string[]; // It's a Set<string> but TS cannot serialize Sets properly.\n\n  constructor(product: string) {\n    this.product = product;\n    this.type = \"ers\";\n    this.notification_protocol_version = 0;\n    this.message_types = [];\n  }\n\n  /*\n   * @internal\n   *\n   * Populate init registrations section in the Twilsock configuration generically with\n   * passed-in list of types to register.\n   *\n   * Used only by the SDK, ignore.\n   *\n   * @param {string[]} types List of types to add to init registrations in options.\n   * @param {object} options Twilsock options object to update. Omit to create a new one.\n   */\n  public populateInitRegistrations(types: string[]): void {\n    const s = new Set<string>(this.message_types);\n    // Update options reference in place\n    for (const idx in types) {\n      s.add(types[idx]);\n    }\n    this.message_types = Array.from(s);\n  }\n}\n\nexport { InitRegistration };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,gBAAgB;IAMpB,YAAY,OAAe;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,6BAA6B,GAAG,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;;;;;;;;;;;;IAaM,yBAAyB,CAAC,KAAe;QAC9C,MAAM,CAAC,GAAG,IAAI,GAAG,CAAS,IAAI,CAAC,aAAa,CAAC,CAAC;;QAE9C,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;YACvB,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;SACnB;QACD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACpC;;;;;"}