{"version":3,"file":"mergingqueue.js","sources":["../src/mergingqueue.ts"],"sourcesContent":["export type RequestFunction<InputType, ReturnType> = (input: InputType) => Promise<ReturnType>;\nexport type InputReducer<InputType> = (acc: InputType, input: InputType) => InputType;\n\nexport interface QueuedRequest<InputType, ReturnType> {\n  input: InputType;\n  requestFunction: RequestFunction<InputType, ReturnType>;\n  resolve: (result: ReturnType) => any;\n  reject: (error: any) => any;\n}\n\nexport class MergingQueue<InputType, ReturnType> {\n\n  private queuedRequests: QueuedRequest<InputType, ReturnType>[] = [];\n  private inputMergingFunction: InputReducer<InputType>;\n  private isRequestInFlight: boolean = false;\n\n  constructor(inputMergingFunction: InputReducer<InputType>) {\n    this.inputMergingFunction = inputMergingFunction;\n  }\n\n  public add(input: InputType, requestFunction: RequestFunction<InputType, ReturnType>): Promise<ReturnType> {\n    let promise: Promise<ReturnType> = new Promise((resolve, reject) =>\n      this.queuedRequests.push({input, requestFunction, resolve, reject})\n    );\n    this.wakeupQueue();\n\n    return promise;\n  }\n\n  public squashAndAdd(input: InputType, requestFunction: RequestFunction<InputType, ReturnType>): Promise<ReturnType> {\n    let queueToSquash = this.queuedRequests;\n    this.queuedRequests = [];\n\n    let reducedInput;\n    if (queueToSquash.length > 0) {\n      reducedInput = queueToSquash.map(r => r.input).reduce(this.inputMergingFunction);\n      reducedInput = this.inputMergingFunction(reducedInput, input);\n    } else {\n      reducedInput = input;\n    }\n\n    let promise = this.add(reducedInput, requestFunction);\n\n    queueToSquash.forEach(request => promise.then(request.resolve, request.reject));\n    return promise;\n  }\n\n  public isEmpty(): boolean {\n    return this.queuedRequests.length === 0 && !this.isRequestInFlight;\n  }\n\n  private wakeupQueue() {\n    if (this.queuedRequests.length === 0 || this.isRequestInFlight) {\n      return;\n    } else {\n      let requestToExecute = this.queuedRequests.shift();\n      this.isRequestInFlight = true;\n      requestToExecute.requestFunction(requestToExecute.input)\n        .then(requestToExecute.resolve, requestToExecute.reject)\n        .then(__ => {\n          this.isRequestInFlight = false;\n          this.wakeupQueue();\n        });\n    }\n  }\n}\n\nexport class NamespacedMergingQueue<K, InputType, ReturnType> {\n\n  private inputReducer: InputReducer<InputType>;\n  private queueByNamespaceKey: Map<K, MergingQueue<InputType, ReturnType>> = new Map<K, MergingQueue<InputType, ReturnType>>();\n\n  constructor(inputReducer: InputReducer<InputType>) {\n    this.inputReducer = inputReducer;\n  }\n\n  public async add(namespaceKey: K, input: InputType, requestFunction: RequestFunction<InputType, ReturnType>): Promise<ReturnType> {\n    return this.invokeQueueMethod(namespaceKey, queue => queue.add(input, requestFunction));\n  }\n\n  public async squashAndAdd(namespaceKey: K, input: InputType, requestFunction: RequestFunction<InputType, ReturnType>): Promise<ReturnType> {\n    return this.invokeQueueMethod(namespaceKey, queue => queue.squashAndAdd(input, requestFunction));\n  }\n\n  public async invokeQueueMethod(\n    namespaceKey: K,\n    queueMethodInvoker: (queue: MergingQueue<InputType, ReturnType>) => Promise<ReturnType>): Promise<ReturnType> {\n\n    if (!this.queueByNamespaceKey.has(namespaceKey)) {\n      this.queueByNamespaceKey.set(namespaceKey, new MergingQueue<InputType, ReturnType>(this.inputReducer));\n    }\n    const queue = this.queueByNamespaceKey.get(namespaceKey);\n    const result = queueMethodInvoker(queue);\n    if (this.queueByNamespaceKey.get(namespaceKey).isEmpty()) {\n      this.queueByNamespaceKey.delete(namespaceKey);\n    }\n    return result;\n  }\n}\n"],"names":[],"mappings":"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"}