{"version":3,"file":"channeldescriptor.js","sources":["../src/channeldescriptor.ts"],"sourcesContent":["import { Logger } from './logger';\nimport { Channel, NotificationLevel, ChannelStatus, ChannelType } from './channel';\nimport { Client } from './client';\nimport { parseAttributes, parseTime } from './util';\n\nconst log = Logger.scope('ChannelDescriptor');\n\n/**\n * Contains channel information.\n * Unlike {@link Channel}, this information won't be updated in realtime.\n * To have fresh data, user should query for channel descriptors again.\n */\nclass ChannelDescriptor {\n  public client: Client;\n  public descriptor: any;\n\n  /**\n   * Unique system identifier of the channel.\n   */\n  public readonly sid: string;\n\n  /**\n   * Custom attributes of the channel.\n   */\n  public readonly channel: string;\n\n  /**\n   * Unique name of the channel.\n   */\n  public readonly uniqueName: string;\n\n  /**\n   * Name of the channel.\n   */\n  public readonly friendlyName: string;\n\n  /**\n   * Custom attributes of the channel.\n   */\n  public readonly attributes: any;\n\n  /**\n   * Identity of the user that created this channel.\n   */\n  public readonly createdBy: string;\n\n  /**\n   * Date this channel was created on.\n   */\n  public readonly dateCreated: Date;\n\n  /**\n   * Date this channel was last updated on.\n   */\n  public readonly dateUpdated: Date;\n\n  /**\n   * Amount of messages in the channel.\n   */\n  public readonly messagesCount: number;\n\n  /**\n   * Amount of members in the channel.\n   */\n  public readonly membersCount: number;\n\n  /**\n   * Index of the last message the user has read in this channel.\n   */\n  public readonly lastConsumedMessageIndex: number;\n\n  /**\n   * Delivery status of the channel.\n   */\n  public readonly status: ChannelStatus;\n\n  /**\n   * MemberType of the channel.\n   */\n  public readonly type: ChannelType;\n\n  /**\n   * Signifies whether the channel is private.\n   */\n  public readonly isPrivate: boolean;\n\n  /**\n   * User notification level for this channel.\n   */\n  public readonly notificationLevel: NotificationLevel;\n\n  /**\n   * @internal\n   */\n  constructor(client: Client, descriptor: any) {\n    this.client = client;\n    this.descriptor = descriptor;\n\n    this.sid = descriptor.sid || descriptor.conversation_sid;\n    this.channel = `${this.sid}.channel`;\n    this.uniqueName = descriptor.unique_name;\n    this.friendlyName = descriptor.friendly_name;\n    this.attributes = parseAttributes(descriptor.attributes, 'Failed to parse channel attributes', log);\n    this.createdBy = descriptor.created_by;\n    this.dateCreated = parseTime(descriptor.date_created);\n    this.dateUpdated = parseTime(descriptor.date_updated);\n    this.messagesCount = descriptor.messages_count;\n    this.membersCount = descriptor.participants_count;\n    this.type = descriptor.type;\n    this.isPrivate = descriptor.type === 'private';\n    this.lastConsumedMessageIndex = descriptor.last_consumed_message_index;\n    this.notificationLevel = descriptor.notification_level || undefined;\n    this.status = descriptor.status || 'unknown';\n  }\n\n  /**\n   * Get the channel object from the descriptor.\n   */\n  getChannel(): Promise<Channel> {\n    return this.client.getChannelBySid(this.sid);\n  }\n}\n\nexport { ChannelDescriptor };\n"],"names":["Logger","parseAttributes","parseTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAM,GAAG,GAAGA,aAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AAE9C;;;;;AAKA,MAAM,iBAAiB;;;;IAkFrB,YAAY,MAAc,EAAE,UAAe;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,GAAG,IAAI,UAAU,CAAC,gBAAgB,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC;QACzC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAGC,qBAAe,CAAC,UAAU,CAAC,UAAU,EAAE,oCAAoC,EAAE,GAAG,CAAC,CAAC;QACpG,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,WAAW,GAAGC,eAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAGA,eAAS,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,kBAAkB,CAAC;QAClD,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,KAAK,SAAS,CAAC;QAC/C,IAAI,CAAC,wBAAwB,GAAG,UAAU,CAAC,2BAA2B,CAAC;QACvE,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,kBAAkB,IAAI,SAAS,CAAC;QACpE,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,IAAI,SAAS,CAAC;KAC9C;;;;IAKD,UAAU;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC9C;;;;;"}