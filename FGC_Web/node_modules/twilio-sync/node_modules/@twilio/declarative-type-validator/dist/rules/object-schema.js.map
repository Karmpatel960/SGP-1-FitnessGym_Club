{"version":3,"file":"object-schema.js","sources":["../../src/rules/object-schema.ts"],"sourcesContent":["import {\n  convertRuleArgument,\n  RuleArgument,\n  RuleDefinition,\n  validateValue,\n} from \"../type-validator\";\nimport { custom } from \"./custom\";\n\nexport const objectSchema = (\n  name: string,\n  schema: Record<string, RuleArgument>\n): RuleDefinition =>\n  custom((object) => {\n    if (\n      typeof object !== \"object\" ||\n      object === null ||\n      Array.isArray(object)\n    ) {\n      return [false, `valid ${name} (should be a pure object)`];\n    }\n\n    for (const [key, rules] of Object.entries(schema)) {\n      const [isValid, received, expected] = validateValue(\n        convertRuleArgument(rules),\n        (object as Record<string, unknown>)[key]\n      );\n\n      if (!isValid) {\n        return [\n          false,\n          `valid ${name} (key \"${key}\" should be ${expected})`,\n          `malformed ${name} (key \"${key}\" is ${received})`,\n        ];\n      }\n    }\n\n    return [true];\n  });\n"],"names":["custom","validateValue","convertRuleArgument"],"mappings":";;;;;;;;;;;;;;;;;;;AAQa,MAAA,YAAY,GAAG,CAC1B,IAAY,EACZ,MAAoC,KAEpCA,aAAM,CAAC,CAAC,MAAM,KAAI;IAChB,IACE,OAAO,MAAM,KAAK,QAAQ;AAC1B,QAAA,MAAM,KAAK,IAAI;AACf,QAAA,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EACrB;AACA,QAAA,OAAO,CAAC,KAAK,EAAE,SAAS,IAAI,CAAA,0BAAA,CAA4B,CAAC,CAAC;AAC3D,KAAA;AAED,IAAA,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACjD,MAAM,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAGC,2BAAa,CACjDC,iCAAmB,CAAC,KAAK,CAAC,EACzB,MAAkC,CAAC,GAAG,CAAC,CACzC,CAAC;QAEF,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;gBACL,KAAK;AACL,gBAAA,CAAA,MAAA,EAAS,IAAI,CAAA,OAAA,EAAU,GAAG,CAAA,YAAA,EAAe,QAAQ,CAAG,CAAA,CAAA;AACpD,gBAAA,CAAA,UAAA,EAAa,IAAI,CAAA,OAAA,EAAU,GAAG,CAAA,KAAA,EAAQ,QAAQ,CAAG,CAAA,CAAA;aAClD,CAAC;AACH,SAAA;AACF,KAAA;IAED,OAAO,CAAC,IAAI,CAAC,CAAC;AAChB,CAAC;;;;"}