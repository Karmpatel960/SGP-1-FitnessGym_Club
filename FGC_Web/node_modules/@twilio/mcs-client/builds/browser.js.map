{"version":3,"file":"browser.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/logger.ts","../src/configuration.ts","../src/media.ts","../src/services/transporterror.ts","../src/services/transport.ts","../src/services/network.ts","../src/client.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import * as log from \"loglevel\";\n\nfunction prepareLine(prefix, args) {\n  return [`${new Date().toISOString()} MCS Client ${prefix}:`].concat(\n    Array.from(args)\n  );\n}\n\nclass Logger {\n  private prefix = \"\";\n\n  private constructor(prefix: string) {\n    this.prefix =\n      prefix !== null && prefix !== undefined && prefix.length > 0\n        ? prefix + \" \"\n        : \"\";\n  }\n\n  static scope(prefix: string): Logger {\n    return new Logger(prefix);\n  }\n\n  setLevel(level: log.LogLevelDesc): void {\n    log.setLevel(level);\n  }\n\n  static setLevel(level: log.LogLevelDesc): void {\n    log.setLevel(level);\n  }\n\n  /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n  trace(...args): void {\n    log.trace.apply(null, prepareLine(this.prefix + \"T\", args));\n  }\n  debug(...args): void {\n    log.debug.apply(null, prepareLine(this.prefix + \"D\", args));\n  }\n  info(...args): void {\n    log.info.apply(null, prepareLine(this.prefix + \"I\", args));\n  }\n  warn(...args): void {\n    log.warn.apply(null, prepareLine(this.prefix + \"W\", args));\n  }\n  error(...args): void {\n    log.error.apply(null, prepareLine(this.prefix + \"E\", args));\n  }\n\n  static trace(...args): void {\n    log.trace.apply(null, prepareLine(\"T\", args));\n  }\n  static debug(...args): void {\n    log.debug.apply(null, prepareLine(\"D\", args));\n  }\n  static info(...args): void {\n    log.info.apply(null, prepareLine(\"I\", args));\n  }\n  static warn(...args): void {\n    log.warn.apply(null, prepareLine(\"W\", args));\n  }\n  static error(...args): void {\n    log.error.apply(null, prepareLine(\"E\", args));\n  }\n}\n\nexport { Logger };\n","import * as log from \"loglevel\";\nimport { Transport } from \"./services/transport\";\n\nconst MINIMUM_RETRY_DELAY = 1000;\nconst MAXIMUM_RETRY_DELAY = 4000;\nconst MAXIMUM_ATTEMPTS_COUNT = 3;\nconst RETRY_WHEN_THROTTLED = true;\n\nconst regionalMcsHost = (region?: string): string =>\n  `https://mcs.${region ?? \"us1\"}.twilio.com`;\n\nconst isFullUrl = (url: string): boolean => url.startsWith(\"http\");\n\nconst fullUrl = (partUrl: string, region?: string): string =>\n  `${!isFullUrl(partUrl) ? regionalMcsHost(region) : \"\"}${partUrl}`;\n\nexport interface BackoffOverride {\n  max: number;\n  min: number;\n  maxAttemptsCount?: number;\n}\n\nexport interface McsOptions {\n  region?: string;\n  retryWhenThrottledOverride?: boolean;\n  backoffConfigOverride?: BackoffOverride;\n}\n\nexport interface Options {\n  region?: string;\n  logLevel?: log.LogLevelDesc;\n  transport?: Transport;\n  retryWhenThrottledOverride?: boolean;\n  backoffConfigOverride?: BackoffOverride;\n  MCS?: McsOptions;\n}\n\nclass Configuration {\n  token: string;\n  public readonly retryWhenThrottledOverride: boolean;\n  public readonly backoffConfigOverride: BackoffOverride;\n  public readonly mediaUrl: string;\n  public readonly mediaSetUrl: string;\n  private readonly region: string;\n\n  constructor(\n    token: string,\n    baseUrl: string,\n    baseSetUrl: string | null,\n    options: Options\n  ) {\n    const constructorOptions = options.MCS ?? options ?? {};\n    this.region = constructorOptions.region ?? options.region ?? 'us1';\n    this.mediaUrl = fullUrl(baseUrl, this.region);\n    this.mediaSetUrl = baseSetUrl ? fullUrl(baseSetUrl) : `${this.mediaUrl}Set`;\n    this.token = token;\n    this.retryWhenThrottledOverride =\n      constructorOptions.retryWhenThrottledOverride ?? RETRY_WHEN_THROTTLED;\n    this.backoffConfigOverride = constructorOptions.backoffConfigOverride ?? Configuration.backoffConfigDefault;\n  }\n\n  public static get backoffConfigDefault(): BackoffOverride {\n    return {\n      min: MINIMUM_RETRY_DELAY,\n      max: MAXIMUM_RETRY_DELAY,\n      maxAttemptsCount: MAXIMUM_ATTEMPTS_COUNT,\n    };\n  }\n\n  public static get retryWhenThrottledDefault(): boolean {\n    return RETRY_WHEN_THROTTLED;\n  }\n\n  public updateToken(token: string): void {\n    this.token = token;\n  }\n}\n\nexport { Configuration };\n","import { Network } from \"./services/network\";\nimport { Configuration } from \"./configuration\";\n\ntype MediaCategory = \"media\" | \"body\" | \"history\";\n\n/**\n * Media descriptor on the MCS. Available via REST API only.\n */\ninterface MediaRecord {\n  sid: string;\n  serviceSid: string;\n  channelSid: string | null;\n  messageSid: string | null;\n  dateCreated: Date | null;\n  dateUploadUpdated: Date | null;\n  dateUpdated: Date | null;\n  size: number;\n  contentType: string;\n  filename: string | null;\n  category: MediaCategory;\n  author: string;\n  isMultipartUpstream: boolean;\n\n  url: string;\n  contentUrl: string;\n  contentDirectUrl: string | null;\n}\n\ninterface Links {\n  content: string;\n  content_direct_temporary?: string;\n}\n\ninterface MediaResponse {\n  sid: string;\n  service_sid: string;\n  channel_sid: string | null;\n  message_sid: string | null;\n  date_created?: string;\n  date_upload_updated?: string;\n  date_updated?: string;\n  size: number;\n  content_type: string;\n  filename?: string;\n  category?: MediaCategory;\n  author: string;\n  is_multipart_upstream?: boolean;\n  url: string;\n  links: Links;\n}\n\n/**\n * @classdesc A Media represents a metadata information for the media upload\n * @property {String} sid - The server-assigned unique identifier for Media\n * @property {String} serviceSid - Service instance id which Media belongs/uploaded to\n * @property {Date} dateCreated - When the Media was created\n * @property {Date} dateUpdated - When the Media was updated\n * @property {Number} size - Size of media, bytes\n * @property {String} contentType - content type of media\n * @property {String} fileName - file name, if present, null otherwise\n * @property {MediaCategory} category - attachment category\n */\nclass Media {\n  private state!: MediaRecord;\n  private network: Network;\n  private config: Configuration;\n\n  constructor(config: Configuration, network: Network, data: MediaResponse) {\n    this.config = config;\n    this.network = network;\n    this._update(data);\n  }\n\n  public get sid(): string {\n    return this.state.sid;\n  }\n\n  public get serviceSid(): string {\n    return this.state.serviceSid;\n  }\n\n  public get dateCreated(): Date | null {\n    return this.state.dateCreated;\n  }\n\n  public get dateUpdated(): Date | null {\n    return this.state.dateUpdated;\n  }\n\n  public get contentType(): string {\n    return this.state.contentType;\n  }\n\n  public get size(): number {\n    return this.state.size;\n  }\n\n  /** @deprecated Use filename instead */\n  public get fileName(): string | null {\n    return this.state.filename;\n  }\n\n  public get filename(): string | null {\n    return this.state.filename;\n  }\n\n  public get category(): MediaCategory {\n    return this.state.category;\n  }\n\n  /**\n   * Returns direct content URL to uploaded binary. This URL will expire after some time.\n   * This function gets a new URL every time, preventing it from expiring but putting additional load on backend.\n   * See getCachedContentUrl() for a function that reduces the amount of network requests.\n   *\n   * It is reasonable to build your own refresh logic upon these two functions: as soon as URL returned\n   * by getCachedContentUrl() returns 40x status you should call getContentUrl() to refresh it.\n   *\n   * @returns {Promise<string>}\n   */\n  public async getContentUrl(): Promise<string | null> {\n    const response = await this.network.get(\n      `${this.config.mediaUrl}/${this.sid}`\n    );\n    this._update(response.body);\n    return Promise.resolve(this.state.contentDirectUrl);\n  }\n\n  /**\n   * Returns direct content URL to uploaded binary. This URL will expire after some time.\n   * This function does not support getting a new URL however. Once set it will remain the same.\n   * Use getContentUrl() to query a new one.\n   *\n   * It is reasonable to build your own refresh logic upon these two functions: as soon as URL returned\n   * by getCachedContentUrl() returns 40x status you should call getContentUrl() to refresh it.\n   *\n   * @returns {Promise<string>}\n   */\n  public async getCachedContentUrl(): Promise<string | null> {\n    if (this.state.contentDirectUrl) {\n      return Promise.resolve(this.state.contentDirectUrl);\n    }\n    return await this.getContentUrl();\n  }\n\n  private _update(data: MediaResponse): void {\n    this.state = {\n      sid: data.sid,\n      serviceSid: data.service_sid,\n      channelSid: data.channel_sid,\n      messageSid: data.message_sid,\n      dateCreated: data.date_created ? new Date(data.date_created) : null,\n      dateUploadUpdated: data.date_upload_updated\n        ? new Date(data.date_upload_updated)\n        : null,\n      dateUpdated: data.date_updated ? new Date(data.date_updated) : null,\n      size: data.size,\n      contentType: data.content_type,\n      author: data.author,\n      url: data.url,\n      contentUrl: data.links.content,\n      contentDirectUrl: data.links.content_direct_temporary ?? null,\n      filename: data.filename ?? null,\n      category: data.category ?? \"media\",\n      isMultipartUpstream: data.is_multipart_upstream ?? false,\n    };\n  }\n}\n\nexport { Media, MediaCategory, MediaResponse };\n","class TransportError extends Error {\n  public readonly code: number;\n  public readonly body: any;\n  public readonly status: string;\n  public readonly headers: any;\n\n  constructor(\n    message: string,\n    code: number,\n    body: any,\n    status: string,\n    headers: any\n  ) {\n    super(message);\n    this.code = code;\n    this.body = body;\n    this.status = status;\n    this.headers = headers;\n  }\n}\n\nexport { TransportError };\n","import { TransportError } from \"./transporterror\";\n\n// eslint-disable-next-line\nconst XHR = global[\"XMLHttpRequest\"] || require(\"xmlhttprequest\").XMLHttpRequest;\n\ntype Headers = { [id: string]: string };\n\nfunction parseResponseHeaders(headerString: string): Headers {\n  if (!headerString) {\n    return {};\n  }\n\n  return headerString\n    .split(\"\\u000d\\u000a\")\n    .map((el) => el.split(\"\\u003a\\u0020\"))\n    .filter((el) => el.length === 2 && el[1].length > 0)\n    .reduce((prev, curr) => {\n      prev[curr[0]] = curr[1];\n      return prev;\n    }, {});\n}\n\nfunction extractBody(xhr) {\n  const contentType = xhr.getResponseHeader(\"Content-Type\");\n  if (\n    !contentType ||\n    contentType.indexOf(\"application/json\") !== 0 ||\n    xhr.responseText.length === 0\n  ) {\n    return xhr.responseText;\n  }\n\n  try {\n    return JSON.parse(xhr.responseText);\n  } catch (e) {\n    return xhr.responseText;\n  }\n}\n\nfunction adaptHttpResponse(response: Response) {\n  try {\n    response.body = JSON.parse(response.body);\n  } catch (e) {} // eslint-disable-line no-empty\n  return response;\n}\n\ninterface Response {\n  status: any;\n  headers: Headers;\n  body: any;\n}\n\n/**\n * Provides generic network interface\n */\nclass Transport {\n  private static async request(\n    method: string,\n    url: string,\n    headers: Headers,\n    body?\n  ): Promise<Response> {\n    return new Promise<Response>((resolve, reject) => {\n      const xhr = new XHR();\n      xhr.open(method, url, true);\n\n      xhr.onreadystatechange = function onreadystatechange() {\n        if (xhr.readyState !== 4) {\n          return;\n        }\n\n        const headers = parseResponseHeaders(xhr.getAllResponseHeaders());\n        const body = extractBody(xhr);\n\n        if (200 <= xhr.status && xhr.status < 300) {\n          resolve({ status: xhr.status, headers, body });\n        } else {\n          const status = xhr.statusText ?? \"NONE\";\n          let bodyRepresentation;\n          if (typeof body === \"string\") {\n            bodyRepresentation =\n              body && body.split(\"\\n\", 2).length === 1 ? body : \"\";\n          } else {\n            bodyRepresentation = JSON.stringify(body);\n          }\n          const message = `${xhr.status}: [${status}] ${bodyRepresentation}`;\n          reject(\n            new TransportError(message, xhr.status, body, status, headers)\n          );\n        }\n      };\n\n      for (const headerName in headers) {\n        xhr.setRequestHeader(headerName, headers[headerName]);\n        if (\n          headerName === \"Content-Type\" &&\n          headers[headerName] === \"application/json\"\n        ) {\n          body = JSON.stringify(body);\n        }\n      }\n\n      xhr.send(body);\n    });\n  }\n\n  /**\n   * Make a GET request by given URL\n   */\n  public async get(url: string, headers: Headers): Promise<Response> {\n    return Transport.request(\"GET\", url, headers);\n  }\n\n  /**\n   * Make a POST request by given URL\n   */\n  public async post(url: string, headers: Headers, body?): Promise<Response> {\n    return Transport.request(\"POST\", url, headers, body);\n  }\n}\n\nexport { Headers, Response, Transport };\n","import { Retrier } from \"@twilio/operation-retrier\";\nimport { Logger } from \"../logger\";\nimport { Configuration } from \"../configuration\";\nimport { Transport } from \"./transport\";\nimport { MediaCategory } from \"../media\";\n\nconst log = Logger.scope(\"Network\");\n\nclass Network {\n  private readonly config: Configuration;\n  private readonly transport: Transport;\n\n  constructor(config: Configuration, transport: Transport) {\n    this.config = config;\n    this.transport = transport;\n  }\n\n  private backoffConfig() {\n    return Object.assign(\n      Configuration.backoffConfigDefault,\n      this.config.backoffConfigOverride\n    );\n  }\n\n  private retryWhenThrottled(): boolean {\n    return (\n      this.config.retryWhenThrottledOverride ??\n      Configuration.retryWhenThrottledDefault ??\n      false\n    );\n  }\n\n  private async executeWithRetry(\n    request,\n    retryWhenThrottled: boolean\n  ): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const codesToRetryOn = [502, 503, 504];\n      if (retryWhenThrottled) {\n        codesToRetryOn.push(429);\n      }\n\n      const retrier = new Retrier(this.backoffConfig());\n      retrier.on(\"attempt\", async () => {\n        try {\n          const result = await request();\n          retrier.succeeded(result);\n        } catch (err) {\n          if (codesToRetryOn.indexOf(err.status) > -1) {\n            retrier.failed(err);\n          } else if (err.message === \"Twilsock disconnected\") {\n            // Ugly hack. We must make a proper exceptions for twilsock\n            retrier.failed(err);\n          } else {\n            // Fatal error\n            retrier.removeAllListeners();\n            retrier.cancel();\n            reject(err);\n          }\n        }\n      });\n\n      retrier.on(\"succeeded\", (result) => {\n        resolve(result);\n      });\n      retrier.on(\"cancelled\", (err) => reject(err));\n      retrier.on(\"failed\", (err) => reject(err));\n\n      retrier.start();\n    });\n  }\n\n  public async get(url: string): Promise<any> {\n    const headers = { \"X-Twilio-Token\": this.config.token };\n    log.trace(\"sending GET request to \", url, \" headers \", headers);\n    try {\n      const response = await this.executeWithRetry(\n        () => this.transport.get(url, headers),\n        this.retryWhenThrottled()\n      );\n      log.trace(\"response\", response);\n      return response;\n    } catch (err) {\n      log.debug(`get() error ${err}`);\n      throw err;\n    }\n  }\n\n  public async post(\n    url: string,\n    category: MediaCategory | null,\n    media: string | Buffer | Blob | FormData | Record<string, unknown>,\n    contentType?: string,\n    filename?: string\n  ): Promise<any> {\n    const headers = {\n      \"X-Twilio-Token\": this.config.token,\n    };\n\n    if (\n      (typeof FormData === \"undefined\" || !(media instanceof FormData)) &&\n      contentType\n    ) {\n      Object.assign(headers, {\n        \"Content-Type\": contentType,\n      });\n    }\n\n    const fullUrl = new URL(url);\n    if (category) {\n      fullUrl.searchParams.append(\"Category\", category);\n    }\n    if (filename) {\n      fullUrl.searchParams.append(\"Filename\", filename);\n    }\n\n    let response;\n    log.trace(`sending POST request to ${url} with headers ${headers}`);\n    try {\n      response = await this.transport.post(fullUrl.href, headers, media);\n    } catch (err) {\n      // If global[\"XMLHttpRequest\"] is undefined, it means that the code is\n      // not being executed in the browser.\n      if (global[\"XMLHttpRequest\"] === undefined && media instanceof FormData) {\n        throw new TypeError(\n          \"Posting FormData supported only with browser engine's FormData\"\n        );\n      }\n      log.debug(`post() error ${err}`);\n      throw err;\n    }\n    log.trace(\"response\", response);\n    return response;\n  }\n}\n\nexport { Network };\n","import { Logger } from \"./logger\";\nimport { Configuration } from \"./configuration\";\nimport { Media, MediaCategory, MediaResponse } from \"./media\";\nimport { Transport } from \"./services/transport\";\nimport { Network } from \"./services/network\";\nimport { version } from \"../package.json\";\nimport * as loglevel from \"loglevel\";\nimport {\n  validateTypesAsync,\n  validateTypes,\n  nonEmptyString,\n  literal,\n  pureObject,\n  validateConstructorTypes,\n} from \"@twilio/declarative-type-validator\";\n\nconst log = Logger.scope(\"\");\n//log.setLevel('trace');\n\nexport type LogLevel = loglevel.LogLevelDesc | null;\n\nexport interface Options {\n  region?: string;\n  logLevel?: loglevel.LogLevelDesc;\n  transport?: Transport;\n}\n\n/**\n * @classdesc A Client provides an interface for Media Content Service\n */\n@validateConstructorTypes(\n  nonEmptyString,\n  nonEmptyString,\n  [nonEmptyString, literal(null)],\n  [pureObject, \"undefined\"]\n)\nclass Client {\n  // eslint-disable-next-line\n  private readonly transport: any;\n  private options: Options;\n  private network: Network;\n  private config: Configuration;\n  public static readonly version: string = version;\n\n  /**\n   * Base URLs must be full URLs with host. If host is not provided it will be generated from a default configuration\n   * template using options.region.\n   *\n   * @param {String} token - Access token\n   * @param {String} baseUrl - Base URL for Media Content Service Media resource, i.e. /v1/Services/{serviceSid}/Media\n   * @param {String} baseSetUrl - Base URL for Media Content Service MediaSet resource, i.e. /v1/Services/{serviceSid}/MediaSet\n   * @param {Client#ClientOptions} [options] - Options to customize the Client\n   */\n  constructor(\n    token: string,\n    baseUrl: string,\n    baseSetUrl: string | null,\n    options: Options = {}\n  ) {\n    this.options = options;\n    this.options.logLevel = this.options.logLevel ?? \"silent\";\n    this.config = new Configuration(token, baseUrl, baseSetUrl, this.options);\n\n    log.setLevel(this.options.logLevel);\n\n    this.options.transport = this.options.transport ?? new Transport();\n\n    this.transport = this.options.transport;\n    this.network = new Network(this.config, this.transport);\n  }\n\n  /**\n   * These options can be passed to Client constructor\n   * @typedef {Object} Client#ClientOptions\n   * @property {String} [logLevel='silent'] - The level of logging to enable. Valid options\n   *   (from strictest to broadest): ['silent', 'error', 'warn', 'info', 'debug', 'trace']\n   */\n\n  /**\n   * Update the token used for Client operations\n   * @param {String} token - The JWT string of the new token\n   * @returns {void}\n   */\n  @validateTypes(nonEmptyString)\n  public updateToken(token: string): void {\n    log.info(\"updateToken\");\n    this.config.updateToken(token);\n  }\n\n  /**\n   * Gets media from media service\n   * @param {String} sid - Media's SID\n   * @returns {Promise<Media>}\n   */\n  @validateTypesAsync(nonEmptyString)\n  public async get(sid: string): Promise<Media> {\n    const response = await this.network.get(`${this.config.mediaUrl}/${sid}`);\n    return new Media(this.config, this.network, response.body);\n  }\n\n  /**\n   * Posts raw content to media service\n   * @param {String} contentType - content type of media\n   * @param {String|Buffer|Blob} media - content to post\n   * @param {MediaCategory|null} category - category for the media\n   * @returns {Promise<Media>}\n   */\n  public async post(\n    contentType: string,\n    media: string | Buffer | Blob,\n    category: MediaCategory | null,\n    filename?: string\n  ): Promise<Media> {\n    const response = await this.network.post(\n      this.config.mediaUrl,\n      category ?? \"media\",\n      media,\n      contentType,\n      filename\n    );\n    return new Media(this.config, this.network, response.body);\n  }\n\n  /**\n   * Posts FormData to media service. Can be used only with browser engine's FormData.\n   * In non-browser FormData case the method will do promise reject with\n   * new TypeError(\"Posting FormData supported only with browser engine's FormData\")\n   * @param {FormData} formData - form data to post\n   * @param {MediaCategory|null} category - category for the media\n   * @returns {Promise<Media>}\n   */\n  public async postFormData(\n    formData: FormData,\n    category?: MediaCategory | null\n  ): Promise<Media> {\n    const response = await this.network.post(\n      this.config.mediaUrl,\n      category ?? \"media\",\n      formData\n    );\n    return new Media(this.config, this.network, response.body);\n  }\n\n  /**\n   * Retrieve information about multiple media SIDs at the same time.\n   * @param mediaSids Array of Media SIDs to get information from.\n   */\n  public async mediaSetGet(mediaSids: string[]): Promise<Media[]> {\n    const query = {\n      command: \"get\",\n      list: mediaSids.map((sid) => ({ media_sid: sid })),\n    };\n    const response = await this.network.post(\n      `${this.config.mediaSetUrl}`,\n      null,\n      query,\n      \"application/json\"\n    );\n    return response.body.map((item) => {\n      if (item.code !== 200) {\n        throw new Error(\n          `Failed to obtain detailed information about Media items (failed SID ${item.media_record.sid})`\n        );\n      }\n      return new Media(this.config, this.network, item.media_record);\n    });\n  }\n}\n\n// Proper renames should happen in index.ts,\n// otherwise it might screw up exported TS types information.\nexport { Client, Media, MediaCategory };\n"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","log","Retrier","Client","validateTypes","nonEmptyString","validateTypesAsync","validateConstructorTypes","literal","pureObject"],"mappings":"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"}