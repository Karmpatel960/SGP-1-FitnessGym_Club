{"version":3,"file":"commandexecutor.js","sources":["../src/commandexecutor.ts"],"sourcesContent":["import { TransportResult as Result, Transport } from 'twilsock';\nimport { MutationConflictResponse } from './interfaces/commands/mutationconflict';\nimport { v4 as uuidv4 } from 'uuid';\nimport { AsyncRetrier } from '@twilio/operation-retrier';\n\nexport interface CommandExecutorServices {\n  transport: Transport;\n}\n\nconst trimSlashes = (url: string): string =>\n  url.replace(/(^\\/+|\\/+$)/g, '');\n\nconst isMutationConflictResponse = (response: Result<unknown>): response is Result<MutationConflictResponse> =>\n  response.status.code === 202;\n\nclass CommandExecutor {\n  constructor(\n    private _serviceUrl: string,\n    private _services: CommandExecutorServices,\n    private _productId?: string\n  ) {}\n\n  private _preProcessUrl(url: string): string {\n    const trimmedUrl = trimSlashes(url);\n\n    if (/^https?:\\/\\//.test(url)) {\n      return trimmedUrl;\n    }\n\n    return `${trimSlashes(this._serviceUrl)}/${trimmedUrl}`;\n  }\n\n  private async _makeRequest<REQ = void, RESP = void>(\n    method: 'get' | 'post' | 'delete',\n    url: string,\n    requestBody?: REQ,\n    headers?: Record<string, string>\n  ): Promise<Result<RESP>> {\n    const preProcessedUrl = this._preProcessUrl(url);\n    const finalHeaders = {\n      'Content-Type': 'application/json; charset=utf-8',\n      ...(headers || {})\n    };\n    let response: Result<RESP>;\n\n    switch (method) {\n      case 'get':\n        let getUrl = preProcessedUrl;\n\n        if (requestBody) {\n          getUrl +=\n            '?' +\n            Object.entries(requestBody)\n              .map((entry) => entry.map(encodeURIComponent).join('='))\n              .join('&');\n        }\n\n        response = await this._services.transport.get(getUrl, finalHeaders, this._productId);\n        break;\n      case 'post':\n        response = await this._services.transport.post(preProcessedUrl, finalHeaders, JSON.stringify(requestBody), this._productId);\n        break;\n      case 'delete':\n        response = await this._services.transport.delete(preProcessedUrl, finalHeaders, null, this._productId);\n        break;\n    }\n\n    if (response.status.code < 200 || response.status.code >= 300) {\n      throw new Error(`Request responded with a non-success code ${response.status.code}`);\n    }\n\n    return response;\n  }\n\n  public async fetchResource<REQ = void, RESP = void>(\n    url: string,\n    requestBody?: REQ\n  ): Promise<RESP> {\n    const maxAttemptsCount = 6;\n    let result: Result<RESP>;\n\n    try {\n      result = await new AsyncRetrier({ min: 50, max: 1600, maxAttemptsCount })\n        .run(() => this._makeRequest<REQ, RESP>('get', url, requestBody));\n    } catch {\n      throw new Error(`Fetch resource from \"${url}\" failed.`);\n    }\n\n    return result.body;\n  }\n\n  public async mutateResource<REQ = void, RESP = void>(\n    method: 'post' | 'delete',\n    url: string,\n    requestBody?: REQ\n  ): Promise<RESP> {\n    const result = await this._makeRequest<REQ, RESP>(method, url, requestBody, {\n      'X-Twilio-Mutation-Id': uuidv4()\n    });\n\n    if (isMutationConflictResponse(result)) {\n      return await this.fetchResource<undefined, RESP>(result.body.resource_url);\n    }\n\n    return result.body;\n  }\n}\n\nexport { CommandExecutor };\n"],"names":["AsyncRetrier","uuidv4"],"mappings":"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"}