{"version":3,"file":"backoff.js","sources":["../src/backoff.ts"],"sourcesContent":["import { EventEmitter } from \"events\";\n\nfunction isDef(value: number | undefined | null): value is number {\n  return value !== undefined && value !== null;\n}\n\nexport interface BackoffOptions {\n  initialDelay?: number;\n  maxDelay?: number;\n  randomisationFactor?: number;\n  factor?: number;\n}\n\nclass Backoff extends EventEmitter {\n  private readonly maxDelay: number;\n  private readonly initialDelay: number;\n  private readonly factor: number;\n  private readonly randomisationFactor: number;\n  private backoffDelay = 0;\n  private nextBackoffDelay = 0;\n  private backoffNumber = 0;\n  private timeoutID: ReturnType<typeof setTimeout> | null = null;\n  private maxNumberOfRetry = -1;\n\n  constructor(options: BackoffOptions) {\n    super();\n    options = options || {};\n    const { initialDelay, maxDelay, randomisationFactor, factor } = options;\n\n    if (isDef(initialDelay) && initialDelay < 1) {\n      throw new Error(\n        \"The initial timeout must be equal to or greater than 1.\"\n      );\n    }\n    if (isDef(maxDelay) && maxDelay <= 1) {\n      throw new Error(\"The maximal timeout must be greater than 1.\");\n    }\n    if (\n      isDef(randomisationFactor) &&\n      (randomisationFactor < 0 || randomisationFactor > 1)\n    ) {\n      throw new Error(\"The randomisation factor must be between 0 and 1.\");\n    }\n    if (isDef(factor) && factor <= 1) {\n      throw new Error(`Exponential factor should be greater than 1.`);\n    }\n\n    this.initialDelay = initialDelay || 100;\n    this.maxDelay = maxDelay || 10000;\n    if (this.maxDelay <= this.initialDelay) {\n      throw new Error(\n        \"The maximal backoff delay must be greater than the initial backoff delay.\"\n      );\n    }\n    this.randomisationFactor = randomisationFactor || 0;\n    this.factor = factor || 2;\n    this.reset();\n  }\n\n  public static exponential(options: BackoffOptions): Backoff {\n    return new Backoff(options);\n  }\n\n  public backoff(err?: Error): void {\n    if (this.timeoutID == null) {\n      if (this.backoffNumber === this.maxNumberOfRetry) {\n        this.emit(\"fail\", err);\n        this.reset();\n      } else {\n        this.backoffDelay = this.next();\n        this.timeoutID = setTimeout(\n          this.onBackoff.bind(this),\n          this.backoffDelay\n        );\n        this.emit(\"backoff\", this.backoffNumber, this.backoffDelay, err);\n      }\n    }\n  }\n\n  public reset(): void {\n    this.backoffDelay = 0;\n    this.nextBackoffDelay = this.initialDelay;\n    this.backoffNumber = 0;\n    if (this.timeoutID) {\n      clearTimeout(this.timeoutID);\n    }\n    this.timeoutID = null;\n  }\n\n  public failAfter(maxNumberOfRetry: number): void {\n    if (maxNumberOfRetry <= 0) {\n      throw new Error(\n        `Expected a maximum number of retry greater than 0 but got ${maxNumberOfRetry}`\n      );\n    }\n\n    this.maxNumberOfRetry = maxNumberOfRetry;\n  }\n\n  next(): number {\n    this.backoffDelay = Math.min(this.nextBackoffDelay, this.maxDelay);\n    this.nextBackoffDelay = this.backoffDelay * this.factor;\n    const randomisationMultiple = 1 + Math.random() * this.randomisationFactor;\n    return Math.min(\n      this.maxDelay,\n      Math.round(this.backoffDelay * randomisationMultiple)\n    );\n  }\n\n  onBackoff(): void {\n    this.timeoutID = null;\n    this.emit(\"ready\", this.backoffNumber, this.backoffDelay);\n    this.backoffNumber++;\n  }\n}\n\nexport { Backoff };\nexport default Backoff;\n"],"names":["EventEmitter"],"mappings":"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"}