{"version":3,"file":"configuration.js","sources":["../src/configuration.ts"],"sourcesContent":["const SUBSCRIPTIONS_PATH = '/v4/Subscriptions';\nconst MAPS_PATH = '/v3/Maps';\nconst LISTS_PATH = '/v3/Lists';\nconst DOCUMENTS_PATH = '/v3/Documents';\nconst STREAMS_PATH = '/v3/Streams';\nconst INSIGHTS_PATH = '/v3/Insights';\n\nfunction getWithDefault<T>(container: any, key: string, defaultValue: T): T {\n  if (container && typeof container[key] !== 'undefined') {\n    return container[key];\n  }\n  return defaultValue;\n}\n\n/**\n * Settings container for Sync library\n */\nclass Configuration {\n  private settings: any;\n\n  /**\n   * @param {Object} options\n   */\n  constructor(options: any = {}) {\n    const region = options.region || 'us1';\n    const defaultCdsUrl = `https://cds.${region}.twilio.com`;\n    const baseUri = options.cdsUri || defaultCdsUrl;\n    this.settings = {\n      subscriptionsUri: baseUri + SUBSCRIPTIONS_PATH,\n      documentsUri: baseUri + DOCUMENTS_PATH,\n      listsUri: baseUri + LISTS_PATH,\n      mapsUri: baseUri + MAPS_PATH,\n      streamsUri: baseUri + STREAMS_PATH,\n      insightsUri: baseUri + INSIGHTS_PATH,\n      sessionStorageEnabled: getWithDefault(options.Sync, 'enableSessionStorage', true),\n      productId: options.productId,\n    };\n  }\n\n  get subscriptionsUri(): string {\n    return this.settings.subscriptionsUri;\n  }\n\n  get documentsUri(): string {\n    return this.settings.documentsUri;\n  }\n\n  get listsUri(): string {\n    return this.settings.listsUri;\n  }\n\n  get mapsUri(): string {\n    return this.settings.mapsUri;\n  }\n\n  get streamsUri(): string {\n    return this.settings.streamsUri;\n  }\n\n  get insightsUri(): string {\n    return this.settings.insightsUri;\n  }\n\n  get backoffConfig(): any {\n    return this.settings.backoffConfig || {};\n  }\n\n  get sessionStorageEnabled(): boolean {\n    return this.settings.sessionStorageEnabled;\n  }\n\n  get productId(): string {\n    return this.settings.productId;\n  }\n}\n\nexport { Configuration };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM,kBAAkB,GAAG,mBAAmB,CAAC;AAC/C,MAAM,SAAS,GAAG,UAAU,CAAC;AAC7B,MAAM,UAAU,GAAG,WAAW,CAAC;AAC/B,MAAM,cAAc,GAAG,eAAe,CAAC;AACvC,MAAM,YAAY,GAAG,aAAa,CAAC;AACnC,MAAM,aAAa,GAAG,cAAc,CAAC;AAErC,SAAS,cAAc,CAAI,SAAc,EAAE,GAAW,EAAE,YAAe,EAAA;IACrE,IAAI,SAAS,IAAI,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,WAAW,EAAE;AACtD,QAAA,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;AACvB,KAAA;AACD,IAAA,OAAO,YAAY,CAAC;AACtB,CAAC;AAED;;AAEG;AACH,MAAM,aAAa,CAAA;AAGjB;;AAEG;AACH,IAAA,WAAA,CAAY,UAAe,EAAE,EAAA;AAC3B,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC;AACvC,QAAA,MAAM,aAAa,GAAG,CAAe,YAAA,EAAA,MAAM,aAAa,CAAC;AACzD,QAAA,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,IAAI,aAAa,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG;YACd,gBAAgB,EAAE,OAAO,GAAG,kBAAkB;YAC9C,YAAY,EAAE,OAAO,GAAG,cAAc;YACtC,QAAQ,EAAE,OAAO,GAAG,UAAU;YAC9B,OAAO,EAAE,OAAO,GAAG,SAAS;YAC5B,UAAU,EAAE,OAAO,GAAG,YAAY;YAClC,WAAW,EAAE,OAAO,GAAG,aAAa;YACpC,qBAAqB,EAAE,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,sBAAsB,EAAE,IAAI,CAAC;YACjF,SAAS,EAAE,OAAO,CAAC,SAAS;SAC7B,CAAC;KACH;AAED,IAAA,IAAI,gBAAgB,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC;KACvC;AAED,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;KACnC;AAED,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;KAC/B;AAED,IAAA,IAAI,OAAO,GAAA;AACT,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;KAC9B;AAED,IAAA,IAAI,UAAU,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;KACjC;AAED,IAAA,IAAI,WAAW,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;KAClC;AAED,IAAA,IAAI,aAAa,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,EAAE,CAAC;KAC1C;AAED,IAAA,IAAI,qBAAqB,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC;KAC5C;AAED,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;KAChC;AACF;;;;"}