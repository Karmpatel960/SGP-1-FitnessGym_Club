{"version":3,"file":"userdescriptor.js","sources":["../src/userdescriptor.ts"],"sourcesContent":["import { Logger } from './logger';\nimport { User } from './user';\nimport { Users } from './data/users';\nimport { parseAttributes } from './util';\n\nconst log = Logger.scope('UserDescriptor');\n\ninterface UserDescriptorServices {\n  users: Users;\n}\n\n/**\n * Contains extended user information.\n */\nclass UserDescriptor {\n\n  private services: UserDescriptorServices;\n  private descriptor: any;\n\n  /**\n   * User identity.\n   */\n  public readonly identity: string;\n\n  /**\n   * Friendly name of the user, null if not set.\n   */\n  public readonly friendlyName: string;\n\n  /**\n   * Custom attributes of the user.\n   */\n  public readonly attributes: any;\n\n  /**\n   * Status of the real-time conversation connection of the user.\n   *\n   * Works only when the reachability functionality is enabled.\n   * Refer to {@link Client.reachabilityEnabled}.\n   */\n  public readonly online: boolean;\n\n  /**\n   * User push notification registration status.\n   *\n   * Works only when the reachability functionality is enabled.\n   * Refer to {@link Client.reachabilityEnabled}.\n   */\n  public readonly notifiable: boolean;\n\n  /**\n   * @internal\n   */\n  constructor(services: UserDescriptorServices, descriptor: any) {\n    this.services = services;\n    this.descriptor = descriptor;\n\n    this.identity = descriptor.identity;\n    this.friendlyName = descriptor.friendly_name;\n    this.attributes = parseAttributes(descriptor.attributes, 'Failed to parse user attributes', log);\n    this.online = descriptor.is_online;\n    this.notifiable = descriptor.is_notifiable;\n  }\n\n  /**\n   * Get the user object from the descriptor and subscribe to it.\n   */\n  subscribe(): Promise<User> {\n    return this.services.users.getUser(this.identity, this.descriptor.sync_unique_name);\n  }\n\n  _getDescriptor() {\n    return this.descriptor;\n  }\n}\n\nexport {\n  UserDescriptor,\n  UserDescriptorServices\n};\n"],"names":["Logger","parseAttributes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,MAAM,GAAG,GAAGA,aAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAM3C;;;AAGA,MAAM,cAAc;;;;IAuClB,YAAY,QAAgC,EAAE,UAAe;QAC3D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAE7B,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;QACpC,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAGC,qBAAe,CAAC,UAAU,CAAC,UAAU,EAAE,iCAAiC,EAAE,GAAG,CAAC,CAAC;QACjG,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC;KAC5C;;;;IAKD,SAAS;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;KACrF;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;;"}