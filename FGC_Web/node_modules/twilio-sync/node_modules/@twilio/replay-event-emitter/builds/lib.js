/*
@license
Copyright (c) 2021 Twilio Inc.

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _classCallCheck = require('@babel/runtime/helpers/classCallCheck');
var _createClass = require('@babel/runtime/helpers/createClass');
var _assertThisInitialized = require('@babel/runtime/helpers/assertThisInitialized');
var _get = require('@babel/runtime/helpers/get');
var _inherits = require('@babel/runtime/helpers/inherits');
var _possibleConstructorReturn = require('@babel/runtime/helpers/possibleConstructorReturn');
var _getPrototypeOf = require('@babel/runtime/helpers/getPrototypeOf');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var events = require('events');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _classCallCheck__default = /*#__PURE__*/_interopDefaultLegacy(_classCallCheck);
var _createClass__default = /*#__PURE__*/_interopDefaultLegacy(_createClass);
var _assertThisInitialized__default = /*#__PURE__*/_interopDefaultLegacy(_assertThisInitialized);
var _get__default = /*#__PURE__*/_interopDefaultLegacy(_get);
var _inherits__default = /*#__PURE__*/_interopDefaultLegacy(_inherits);
var _possibleConstructorReturn__default = /*#__PURE__*/_interopDefaultLegacy(_possibleConstructorReturn);
var _getPrototypeOf__default = /*#__PURE__*/_interopDefaultLegacy(_getPrototypeOf);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf__default["default"](Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf__default["default"](this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn__default["default"](this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var ReplayEventEmitter = /*#__PURE__*/function (_EventEmitter) {
  _inherits__default["default"](ReplayEventEmitter, _EventEmitter);

  var _super = _createSuper(ReplayEventEmitter);

  function ReplayEventEmitter() {
    var _this;

    _classCallCheck__default["default"](this, ReplayEventEmitter);

    _this = _super.call(this);

    _defineProperty__default["default"](_assertThisInitialized__default["default"](_this), "eventHistory", new Map());

    return _this;
  }

  _createClass__default["default"](ReplayEventEmitter, [{
    key: "on",
    value: function on(event, listener) {
      return _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "on", this).call(this, event, listener);
    }
  }, {
    key: "once",
    value: function once(event, listener) {
      return _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "once", this).call(this, event, listener);
    }
  }, {
    key: "off",
    value: function off(event, listener) {
      return _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "off", this).call(this, event, listener);
    }
  }, {
    key: "emit",
    value: function emit(event) {
      var _get2;

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      this.eventHistory.set(event, args);
      return (_get2 = _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "emit", this)).call.apply(_get2, [this, event].concat(args));
    }
  }, {
    key: "addListener",
    value: function addListener(event, listener) {
      return _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "addListener", this).call(this, event, listener);
    }
  }, {
    key: "removeListener",
    value: function removeListener(event, listener) {
      return _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "removeListener", this).call(this, event, listener);
    }
  }, {
    key: "addListenerWithReplay",
    value: function addListenerWithReplay(event, listener) {
      var historyEntry = this.eventHistory.get(event);

      if (historyEntry !== undefined) {
        listener.apply(void 0, _toConsumableArray__default["default"](historyEntry));
      }

      return this.addListener(event, listener);
    }
  }, {
    key: "onWithReplay",
    value: function onWithReplay(event, listener) {
      return this.addListenerWithReplay(event, listener);
    }
  }, {
    key: "onceWithReplay",
    value: function onceWithReplay(event, listener) {
      var historyEntry = this.eventHistory.get(event);

      if (historyEntry !== undefined) {
        listener.apply(void 0, _toConsumableArray__default["default"](historyEntry));
        return this;
      }

      return _get__default["default"](_getPrototypeOf__default["default"](ReplayEventEmitter.prototype), "once", this).call(this, event, listener);
    }
  }]);

  return ReplayEventEmitter;
}(events.EventEmitter);

exports.ReplayEventEmitter = ReplayEventEmitter;
//# sourceMappingURL=lib.js.map
