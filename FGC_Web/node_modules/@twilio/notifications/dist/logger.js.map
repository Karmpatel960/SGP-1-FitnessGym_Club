{"version":3,"file":"logger.js","sources":["../src/logger.ts"],"sourcesContent":["import * as logger from \"loglevel\";\n\nconst log = logger.getLogger(\"twilio-notificatiions\");\n\nfunction prepareLine(prefix, args) {\n  return [`${new Date().toISOString()} Twilio.Notifications ${prefix}:`].concat(\n    Array.from(args)\n  );\n}\n\nclass Logger {\n  setLevel(level: any): void {\n    log.setLevel(level as any);\n  }\n\n  trace(...args): void {\n    log.trace.apply(null, prepareLine(\"T\", args));\n  }\n  debug(...args): void {\n    log.debug.apply(null, prepareLine(\"D\", args));\n  }\n  info(...args): void {\n    log.info.apply(null, prepareLine(\"I\", args));\n  }\n  warn(...args): void {\n    log.warn.apply(null, prepareLine(\"W\", args));\n  }\n  error(...args): void {\n    log.error.apply(null, prepareLine(\"E\", args));\n  }\n}\n\nconst logInstance = new Logger();\n\nexport { Logger, logInstance as log };\n"],"names":["logger"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,GAAG,GAAGA,iBAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;AAEtD,SAAS,WAAW,CAAC,MAAM,EAAE,IAAI;IAC/B,OAAO,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,yBAAyB,MAAM,GAAG,CAAC,CAAC,MAAM,CAC3E,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CACjB,CAAC;AACJ,CAAC;AAED,MAAM,MAAM;IACV,QAAQ,CAAC,KAAU;QACjB,GAAG,CAAC,QAAQ,CAAC,KAAY,CAAC,CAAC;KAC5B;IAED,KAAK,CAAC,GAAG,IAAI;QACX,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAC/C;IACD,KAAK,CAAC,GAAG,IAAI;QACX,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAC/C;IACD,IAAI,CAAC,GAAG,IAAI;QACV,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAC9C;IACD,IAAI,CAAC,GAAG,IAAI;QACV,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAC9C;IACD,KAAK,CAAC,GAAG,IAAI;QACX,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;KAC/C;CACF;MAEK,WAAW,GAAG,IAAI,MAAM;;;;;"}